layout(2)
layout(2, 1, heights=unit)
layout(2, 1, heights=unit)
layout(matrix)
layout(matrix)
layout(1:2)
layout(nrow)
layout(ii.table.row)
layout(mat)
layout()
layout(nrow=length)
layout(matrix, widths = c)
layout(2)
layout(2)
layout(nrow = do.call)
layout(1, 3)
layout(matrix)
layout(1)
layout(1:2)
layout(1)
layout(m)
layout(matrix)
layout(matrix)
layout(matrix)
layout(matrix)
layout(1, method = "number", tl.cex = 4, method = "number", tl.cex = 0.8)
layout(matrix)
layout(1)
layout(matrix)
layout(1)
layout(2)
layout(2, 1, widths=unit, heights = unit)
layout(matrix)
layout(1)
layout(2)
layout(matrix)
layout(1)
layout(mat = Layout, widths = c, heights = c, respect = TRUE)
layout(nrow)
layout(4)
layout(1, 2)
layout(1, 1)
layout(1:4)
layout(matrix)
layout(1:2)
layout(1)
layout(matrix, widths = 1, heights = c, respect = FALSE)
layout(matrix)
layout(1)
layout(matrix)
layout(matrix)
layout(2)
layout(plotRows)
layout(matrix, widths = c)
layout(lmat, widths = lwid, heights = lhei, respect = FALSE)
layout()
layout(plotRows)
layout(2)
layout(3, 2)
layout(matrix, widths = c)
layout(matrix, widths = c, heights = c)
layout(matrix, height=c)
layout(matrix)
layout(1, axes = FALSE)
layout(rbind, heights=c)
layout(nrow=2, ncol=2, widths=c, heights=c, respect=TRUE)
layout(matrix)
layout(2)
layout(2)
layout(2)
layout(matrix)
layout(matrix)
layout(layout.mat, respect=TRUE)
layout(matrix, widths=c, heights=c)
layout(1)
layout(matrix)
layout(1)
layout(mat = m, heights = c)
layout(3, 2)
layout(matrix)
layout(1)
layout(matrix)
layout(1)
layout(matrix)
layout(1)
layout(zones, widths=c, heights=c)
layout(layMat, widths=c, heights=c)
layout(m, widths = c, heights = c)
layout(t)
layout(t)
layout(t)
layout(matrix, c, c, TRUE)
layout(matrix)
layout(1)
layout(1)
layout(t, widths=c)
layout(nrow = 2, ncol = 3, widths = unit, heights = unit, width = unit, height = unit, name = paste)
layout(2, 1)
layout(nrow = 2, ncol = 3, widths = unit, heights = unit, width = unit)
layout(mat)
layout(matrix, widths=c)
layout(matrix)
layout(1)
layout(zones, widths=c, heights=c)
layout(matrix, heights=c)
layout(matrix)
layout(3)
layout(matrix, width=c)
layout(2, 2, widths = widths, heights = heights)
layout(lo)
layout(2, 2, widths = widths, heights = heights)
layout(lo)
layout(t)
layout()
layout()
layout(2)
layout(matrix)
layout()
layout(matrix)
layout(gl, vp=viewport)
layout(nrow=1, ncol=2)
layout(gl)
layout(matrix)
layout(matrix)
layout(matrix)
layout(matrix)
layout(1)
layout(matrix)
layout(1)
layout(matrix, width = c, height = c)
layout(matrix, widths=c)
layout(2)
layout(matrix, widths=c)
layout(nrow)
layout(n.row)
layout(matrix, width=c)
layout(matrix, width=c)
layout(c, heights=c)
layout(nrow=1)
layout(nrow=10, ncol=5)
layout(matrix, widths=c, heights=4, respect=TRUE)
layout(rbind)
layout(2, 2)
layout(matrix, widths=c, widths=c)
layout(matrix, widths=c, height=6, respect=TRUE)
layout(nrow)
layout(1)
layout(matrix, heights=c)
layout(matrix)
layout(matrix)
layout(matrix)
layout(myggplot)
layout(2, 2)
layout(1)
layout(matrix)
layout(1)
layout(matrix, heights=c)
layout(matrix)
layout(mat, widths = c)
layout(matrix, width=c)
layout(matrix)
layout(matrix)
layout(matrix, widths=months)
layout(matrix, widths=widths*2)
layout()
layout(matrix)
layout(matrix)
layout(matrix, heights=c)
layout(2)
layout(1, 1, widths = diff, heights = diff)
layout(2, 1, widths = diff, heights = diff)
layout(x)
layout(mat = lmat, widths = lwid, heights = lhei, 2:1)
layout(matrix, width=c)
layout(matrix)
layout(matrix)
layout(1)
layout(4, 2)
layout(matrix)
layout(laymat)
layout(rbind, heights=c, respect=FALSE)
layout(1)
layout(matrix)
layout(nrow=1, ncol=2)
layout(gl)
layout(matrix)
layout()
layout(1, newdata = NEW, type = "terms")
layout(nrow = 2, ncol = 1, heights = unit)
layout(Layout)
layout(nrow = 2, ncol = 1, heights = unit)
layout(Layout)
layout(matrix)
layout(1, range, pdat, type = "terms", se.fit = TRUE, head)
layout(matrix)
layout(1)
layout(matrix)
layout(1)
layout(nrow=2, ncol=2, heights=c, widths=c, default.units=c)
layout(layt)
layout(matrix, width=c, height=c)
layout(mat = matrix, height = c)
layout(c)
layout(matrix)
layout(nrow=length, ncol=1)
layout(heights = unit, nrow = 1)
layout(matrix)
layout(matrix, widths=c)
layout(mat = lmat, widths = lwid, heights = lhei)
layout(matrix, widths = c)
layout(matrix, widths = c)
layout(matrix)
layout(matrix)
layout(matrix)
layout(2)
layout(1, 2)
layout(1:2, heights=c)
layout(matrix)
layout(matrix, widths=c)
layout()
layout(matrix)
layout(matrix, width=c)
layout(matrix)
layout(matrix, widths=c, heights=c)
layout(matrix)
layout(matrix, widths = lcm, heights = lcm, TRUE)
layout(N+1, N+1, widths=unit, heights = unit)
layout(matrix)
layout(matrix)
layout(nrow)
layout(matrix)
layout(matrix)
layout(matrix)
layout(matrix)
layout(3)
layout(length)
layout(2, 2, widths=c)
layout(3)
layout(nrow=1, ncol=1, widths=0.8, heights=0.8, default.units="npc")
layout(mat=matrix)
layout(matrix)
layout(matrix, heights=c)
layout(matrix)
layout(matrix, heights=c)
layout(matrix, widths=1, heights=c, respect=FALSE)
layout(matrix)
layout()
layout(matrix, c, c, TRUE)
layout(matrix)
layout(1)
layout(matrix, width=c)
layout(matrix, widths=c, heights=4)
layout(matrix)
layout(matrix)
layout(matrix)
layout(matrix)
layout(matrix, widths = c)
layout(matrix, c, c, TRUE)
layout(1)
layout(matrix)
layout()
layout(matrix, widths = c, heights = c)
layout(matrix)
layout(matrix, widths=c)
layout(2, 1)
layout(m)
layout(matrix)
layout(matrix)
layout(matrix)
layout(m)
layout(1)
layout(t)
