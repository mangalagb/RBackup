segments()
segments(0, 0, 0, 1, col= "red", lwd = 2)
segments(0, 0, 0.5, sqrt)
segments(0, 0, 1, 0)
segments(0, 0.2, 1, 0.2, lwd=8)
segments(0, 0.4, 1, 0.4, lwd=8)
segments(0, 0.6, 1, 0.6, lwd=8)
segments(0, 0, .6*cos)
segments(0, 0, .8*cos)
segments(0, 0, cos, sin, col = 'red')
segments(0, 1:8, 599, 1:8, gray)
segments(0.365, 0.77, 0.365, 0.83, lwd = 2)
segments(0, 50, 50, 0)
segments(0.5-epsilon, 0.5, 0.5+epsilon, 0.5, gp=gpar)
segments(0.5*max, 0.9*max, 0.6*max, 0.9*max)
segments(0.5, sqrt, 1, 0)
segments(0.75, mean, 1.25, mean)
segments(0.75, median, 1.25)
segments(0, -age, size, -age)
segments(1, 0, 0, 0)
segments(1, -1, 1, 6.25, lty=3)
segments(1:2, d, 1:2, d)
segments(1:3, dt, 3], 1:3, dt, 4])
segments(1:3, dt, 3], 1:3, dt, 5])
segments(1.75, mean, 2.25, mean)
segments(1, d, 5, d, lty=2)
segments(1:ncol, cis1, ], 1:ncol, cis2, ])
segments(1:nr, lcl, 1:nr, ucl, col = factor)
segments(2.75, mean, 3.25, mean)
segments(2, d, 5, d, lty=2)
segments(3, d, 3, d, lwd=2)
segments(4, 0, 4, 23, col="red", lwd=2)
segments(50, 0, 100, 0)
segments(9, 111.5, 12, 111.5, y, "message")
segments(A1], A2], B1], B2], lwd=3)
segments(AminoData, AminoData, AminoData, AminoData + .5 * AminoData, lty = AminoData, lwd = AminoData, col = as.character)
segments(as.numeric, x, y1 = y + delta, lwd=10, lend=1)
segments(as.numeric, y0=y1, y1=y2)
segments(as.vector, rep.int)
segments(averages-ranges, 1:4, averages+ranges, 1:4)
segments(bleft, bxmax, bright, bxmax, lwd=1)
segments(bleft, bxmedian, bright, bxmedian, lwd=3)
segments(bleft, bxmin, bright, bxmin, lwd=1)
segments(c)
segments(c, c, c, c)
segments(dat, c, dat, dat)
segments(d, d, d, d, lwd=2)
segments(d, d, d, d, lwd=2, col='red')
segments(df, 0, df, ypts, col="gray80")
segments(df, df, df, df, col=df)
segments(df, df, K, 1], K, 2], col=COLi])
segments(endpoints1], endpoints2], endpoints3], endpoints4], col = "#66666650")
segments(factor.to.int, 0)
segments(fit_vals, fit_vals, elevation_points, elevation_points, lty = 3)
segments(head, head, x-1], y-1], rep, head, x-1], y-1], rep)
segments(i +, yz.f * y.max + z.min, i +, yz.f * y.max + z.max, col = col.grid, lty = lty.grid)
segments(i, z.min, i +, yz.f * y.max + z.min, col = col.grid, lty = lty.grid)
segments(lineat, 0, lineat, lineheight, col=col)
segments(ll, 1], ll, 1], ll, 2], ll, 2], name="mysegment", gp=gpar)
segments(mapdata1, -.3, mapdata1, .3)
segments(min)
segments(mydata, mydata, mydata, mydata)
segments(mydf, mydf, y1=mydf)
segments(mydf, rowseq, mydf, rowseq)
segments(obrvi-1], valuei-1], obrvi], valuei], col="blue")
segments(out1, 1], out1, 2], out, 1], out, 2], 99, 1000)
segments(out1, 1], out1, 2], out, 1], out, 2], col="#cccccc")
segments(p1, p1, p2, p2, col = 'white')
segments(p2, p2, p3, p3, lwd=2, col=2, y, z)
segments(par, 10, 30, 10)
segments(par, .8, perc80, .8)
segments(perc80, par, perc80, .8)
segments(rep, first, rep, second, col="gray")
segments(rep, rep)
segments(rotx0y0, 1], rotx0y0, 2], rotx1y1, 1], rotx1y1, 2], col="blue")
segments(seq1s], valuess], seq1s+1], valuess+1], col=ifelse)
segments(start, pNum, end, pNum, lwd = 3)
segments(start, pos + 0.5, end, pos + 0.5, lwd = 2)
segments(start, pos, end, pos)
segments(time-epsilon, layer_0-layer_0_sd, time+epsilon, layer_0-layer_0_sd, lwd=2)
segments(time-epsilon, layer_0+layer_0_sd, time+epsilon, layer_0+layer_0_sd, lwd=2)
segments(time-epsilon, layer_", i, "+layer_", i, "_sd, time+epsilon, layer_", i, "+layer_", i, "_sd, col=", i+1, ")
segments(time-epsilon, layer_", i, "-layer_", i, "_sd, time+epsilon, layer_", i, "-layer_", i, "_sd, col=", i+1, ", lwd=2)
segments(time, layer_0-layer_0_sd, time, layer_0+layer_0_sd, lwd=2)
segments(time, layer_", i, "-layer_", i, "_sd, time, layer_", i, "+layer_", i, "_sd, col=", i+1, ", lwd=2)
segments(unit, unit, unit, unit, gp=gpgrid)
segments(x-0.02, y-sd, x+0.02, y-sd)
segments(x-0.02, y+sd, x+0.02, y+sd)
segments(x0=0.5, x1=0.47, y0=unit, y1=unit, gp=gpar)
segments(x0=0.5, x1=0.53, y0=unit, y1=unit, gp=gpar)
segments(x0=0.5, y0=0.5, x1=0.5+x'value']*0.8, y1=0.5, arrow=arrow, gp=gpar)
segments(x0=0.5, y0=0, x1=0.5, y=1, gp=gpar)
segments(x0, 0, x0, y0)
segments(x0=0, y0=0.5, x1=1, y=0.5, gp=gpar)
segments(x0 = dat, y0 = dat, x1 = dat, y1 = dat, col = "blue", lwd = 6, lend = 2)
segments(x0 = max, y0 = max, y1 = par, lwd=2)
segments(x0=pos, y0=as.numeric, y1=as.numeric, col= mydf)
segments(x0=pos, y0=c, y1=c, col= mydf)
segments(x0 = sd_x, y0= 0, x1 = sd_x, y1 = sd_y, col = "firebrick4", lwd = 2)
segments(x0=ss, x1=ss, y0=ss, y1=ss)
segments(x0=start, x1=start+duration, y0=2)
segments(x0-s+w, y0-b, x0-l, y0-b-l/d, col=cols3], ...)
segments(x0-s+w, y0-b, x0-l, y0-b+l/d, col=cols3], ...)
segments(x0-s, y0-b, x0-l, y0-b-l/d, col=cols3], ...)
segments(x0-s, y0-b, x0-l, y0-b+l/d, col=cols3], ...)
segments(x0 = v_x, x1 = v_x, y0 = 0.3, y1 = 0.7)
segments(x0 = v_x, x1 = X_x, y0 = 0.29, y1 = 0.09)
segments(x0=x0, y0=sin, x1=x0+0.1, y1=sin, col=colour)
segments(x0=x1], y0=x2], x1=x3], y1=x4], lty=2, col="grey80", 90)
segments(x0=x.vals, y0=0, x1=x.vals, y1=y.vals, 13)
segments(x0 = x, x1 = x, y0 = lx, y1 = ux, col = "red", ...)
segments(x0=x'x2'], y0=x'y2'], x1=x'x3'], y1=x'y3'])
segments(x0, y0, x0+.06*cos, y0+.06*sin, default="native", gp=gpar)
segments(x0, y0, x0+.08*cos, y0+.08*sin, default="native", gp=gpar)
segments(x0, y0, x1, y1, col="red", lwd=2)
segments(x0=z1:6, 2], y0=z1:6, 1], x1=z7:12, 2], y1=z7:12, 1])
segments(x1], x3], x2])
segments(x1, y1, x2, y2, ...)
segments(x-251], y-251], x-1], y-1], col=cols, ...)
segments(x2y2.data, 1], x2y2.data, 2], x1y1.datasol, 1], x1y1.datasol, 2])
segments(x.3d, x.3d, x.3d.1, x.3d.1)
segments(xcenter, bxmin, xcenter, bxq2, lwd=1)
segments(xcenter, bxq4, xcenter, bxmax, lwd=1)
segments(xdata, y+dy, tpos, y+2*dy)
segments(xdata, y-dy, xdata, y+dy)
segments(x.end-length)
segments(x-epsilon, y-sd, x+epsilon, y-sd)
segments(x-epsilon, y+sd, x+epsilon, y+sd)
segments(x-hw, y, x+hw, y, ...)
segments(x-hw, y, x, ll, ...)
segments(x-hw, y, x, ul, ...)
segments(xi]-epsilon, low, xi]+epsilon, low)
segments(xi]-epsilon, up, xi]+epsilon, up)
segments(xi], low, xi], up)
segments(xi, "lwr"], yvals, xi, "upr"], yvals, col="black", ...)
segments(x, ll, x+hw, y, ...)
segments(x, losubscripts], x, upsubscripts], col=col.line, ...)
segments(x.min +, i * yz.f + z.min, x.max +, i * yz.f + z.min, col = col.grid, lty = lty.grid)
segments(x.min +, i * yz.f + z.min, x.min +, i * yz.f + z.max, col = col.grid, lty = lty.grid)
segments(x.min + temp, temp1 + i, x.max + temp, temp1 + i, col = col.grid, lty = lty.grid)
segments(x.min + temp, temp1 + i, x.min, i, col = col.grid, lty = lty.grid)
segments(xmin, ticks, xmin, ticks, xpd = TRUE)
segments(xn], yn], xn], fitted, col = "orange", lwd = 3)
segments(xn], yn], xn], predict)
segments(xpts-bar, dat, xpts+bar, dat, col=1:2, lwd=2)
segments(xpts, dat, xpts, dat, col=1:2, lwd=2)
segments(x, rep, x, dnorm, col=heat.colors, lwd=2)
segments(x.start, y, x.end, y, col="orange", lwd=2)
segments(x, ul, x+hw, y, ...)
segments(xvar, yvar, xint)
segments(xvar, yvar, xvar, )
segments(xvar, yvar, xvar, xvar)
segments(x, y-sd, x, y+sd)
segments(x, y, x*.9, y*.9, default="native")
segments(x, y, x, fitted, col = "blue", 65)
segments(x, y, x, fitted, col = "pink")
segments(x, y, x.h, y.h, col=col.hour)
segments(x, y, x, int, col="red")
segments(x, y, x.m, y.m, col=col.min)
segments(x, y, x, y+yse, col="blue")
segments(y0=id, y1=id, x0=Start1, x1=Stop1, col=2:7)
segments(y0=seg, y1=seg, x0=start, x1=end, col=2:7)
segments(y.3d, y.3d, y.3d.1, y.3d.1)
segments(zn, zn, zn, zn, col='salmon', lwd=10, lend=1)
segments(zp, zp, zp, zp, col='skyblue', lwd=10, lend=1)
segments(zscore, 0, zscore, dnorm, zmax, 0.01)
